---
title: "Bioinformatics pipeline summary"
subtitle: "Where we see the pipeline processes"
date: last-modified
author:
  - name: Adrien Taudi√®re
    url: https://adrientaudiere.github.io/bioinfo.starter/analysis/01_bioinformatics.qmd
    affiliation: IdEst
    affiliation-url: https://orcid.org/my-orcid?orcid=0000-0003-1088-1182
citation: true
# bibliography: bibliography.bib
# link-citations: true
---

# Summary of the bioinformatic pipeline

```{r, message=FALSE, warning=FALSE}
library(knitr)
library(targets)
library(MiscMetabar)
here::i_am("analysis/01_bioinformatics.qmd")
source(here::here("R/styles.R"))
source(here::here("R/functions.R"))
```

## Carbon footprint

```{r, message=FALSE, warning=FALSE}
res_ga <- greenAlgoR::ga_targets(store = here::here("_targets/"))
library("emojifont")
ggvalue_box(
  round(res_ga$carbon_footprint_total_gCO2),
  "Carbon footprint (g)",
  icons = fontawesome(search_fontawesome("industry")[1]),
  alpha_icon = 0.7,
  colors = idest_pal$ligth_color_idest[[1]][[3]],
  color_icon = idest_pal$dark_color_idest[[1]][[5]],
  value_font_color = idest_pal$dark_color_idest[[1]][[5]],
  lab_font_color = idest_pal$dark_color_idest[[1]][[5]]
) +
  ggvalue_box(
    round(res_ga$energy_needed_kWh, 2),
    "Energy used (kWh)",
    icons = fontawesome(search_fontawesome("bolt")),
    alpha_icon = 0.7,
    colors = idest_pal$ligth_color_idest[[1]][[1]],
    color_icon = idest_pal$dark_color_idest[[1]][[2]],
    value_font_color = idest_pal$dark_color_idest[[1]][[2]],
    lab_font_color = idest_pal$dark_color_idest[[1]][[2]]
  )
```
## Timeline and cpu usage

```{r, message=FALSE, warning=FALSE}
log_data <- autometric::log_read(
  here::here("data/data_final/autometric_log.txt"),
  units_time = "hours",
  units_memory = "gigabytes"
)

log_data |>
  filter(!grepl("conclude:", phase)) |>
  filter(!grepl("prepare:", phase)) |>
  filter(!grepl("__DEFAULT__", phase)) |>
  ggplot(aes(x = time, y = reorder(phase, desc(time)), color = resident)) +
  geom_line(aes(linewidth = cpu)) +
  scale_color_viridis_b("Memory (Gb)", end = 0.9, direction = -1) +
  theme_idest() +
  xlab("Time (in hours)") +
  ylab("")

```

## Main phyloseq object

You may want to select another targets such as d_asv or d_vs_mumu for example. 

```{r}
d_pq <- clean_pq(tar_read("d_vs", store=here::here("_targets/")))
```

```{r}
summary_plot_pq(d_pq)
```

```{r Visualise target plan, out.width='80%'}
tar_glimpse(script=here::here("_targets.R"), targets_only = TRUE, callr_arguments = list(show = FALSE))
```

```{r}
tar_meta(store=here::here("_targets/"), targets_only = TRUE) |> 
  dplyr::mutate(time = paste0(seconds %/% 3600,":",seconds %/% 60,":",floor(seconds %% 60)))|>
  dplyr::select(name, seconds, bytes, format, time) |>
  dplyr::mutate(Gb=round(bytes/10^9,2)) |>
  dplyr::arrange(desc(seconds), desc(bytes))  |> 
  kable()
```


## Load phyloseq object from targets store

```{r}
d_pq <- tar_read("d_vs", store=here::here("_targets/"))
```

<hr/>

The {targets} package is at the core of this project. Please read the intro of the [user manual](https://books.ropensci.org/targets/) if you don't know {targets}.

::: {.cell .page-columns .page-full .column-screen .grey-section}
The {targets} package store ... *targets* in a folder and can load (`tar_load()`) and read (`tar_read`) object from this folder.
:::

## Sample data

```{r}
DT::datatable(d_pq@sam_data)
```

## Sequences, samples and clusters across the pipeline


::: {.panel-tabset .nav-pills}
## All samples together

```{r}
kable(tar_read(track_sequences_samples_clusters, store=here::here("_targets/")))
```

## Per samples

```{r}
#| message: false
#| results: asis
tab_samp <- tar_read(track_by_samples, store=here::here("_targets/"))

for (li in names(tab_samp)) {
  print(knitr::kable(tab_samp[[li]], caption = li, format="html"))
  cat('\n<!-- -->\n\n')
}
```

:::


## Make krona html files

```{r}
krona(
  clean_pq(d_pq, simplify_taxo = TRUE),
  file = here::here("data/data_final/krona_nb_seq.html")
)
krona(
  clean_pq(d_pq, simplify_taxo = TRUE),
  nb_seq = FALSE,
  file =  here::here("data/data_final/krona_nb_taxa.html")
)
```



{{< include _session_info.qmd >}}
